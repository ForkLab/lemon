#!/usr/bin/env python

import os
import subprocess
import sys

from webassets import Bundle, Environment
from webassets.filter import Filter, register_filter
from webassets.script import main


class StylusFilter(Filter):

    name = 'stylus'

    def setup(self):
        self.stylus = os.path.abspath(os.path.join(os.path.dirname(__file__), 'stylus'))

    def input(self, _in, out, source_path, output_path):
        old_dir = os.getcwd()
        os.chdir(os.path.dirname(source_path))
        try:
            proc = subprocess.Popen(
                [self.stylus, source_path],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE)
            stdout, stderr = proc.communicate()
            if proc.returncode != 0:
                raise Exception(
                    'stylus: subprocess had error: stderr=%s, stdout=%s, '
                    'returncode=%s' % (stderr, stdout, proc.returncode))
            elif stderr:
                print 'stylus filter has warnings:', stderr
            out.write(stdout)
        finally:
            os.chdir(old_dir)


register_filter(StylusFilter)

environment = Environment('lemon/extradmin/static/extradmin', '/static/extradmin')

environment.register('css', Bundle(
    'css/reset.css',
    Bundle('css/default.styl',
           'css/base.styl',
           filters='stylus'),
    'css/jquery.ui.css',
    Bundle('css/changelist.styl',
           'css/changeform.styl',
           filters='stylus'),
    'css/jquery.datetimepicker.css',
    output='css/style.css'))

environment.register('css_auth', Bundle(
    'css/auth_permissions.styl',
    filters=('stylus', 'cssmin'),
    output='css/auth_permissions.css'))


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:], environment) or 0)
